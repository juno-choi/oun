version: '3.7'
services:

  oun-api:
    build:
      context: ../oun-api
      dockerfile: Dockerfile
    container_name: oun-api
    environment:
      - TZ=Asia/Seoul
      - SERVER_PROFILE=${SERVER_PROFILE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DOMAIN_MAIN=${DOMAIN_MAIN}
    labels:
      # 기본 API 라우터 (인증 필요)
      - "traefik.http.routers.oun-api.rule=Host(`${DOMAIN_MAIN}`) && PathPrefix(`/api`) && !PathPrefix(`/api/swagger-ui`) && !PathPrefix(`/api/v3/api-docs`) && !Path(`/api/swagger-ui.html`) && !Path(`/api/test`) && !PathPrefix(`/api/actuator`)"
      - "traefik.http.routers.oun-api.middlewares=cors,auth-forward"
      - "traefik.http.routers.oun-api.tls=true"
      - "traefik.http.routers.oun-api.tls.certresolver=myresolver"
      - "traefik.http.routers.oun-api.entrypoints=websecure"
      
      # Swagger UI 라우터 (인증 불필요)
      - "traefik.http.routers.oun-api-swagger.rule=Host(`${DOMAIN_MAIN}`) && (PathPrefix(`/api/swagger-ui/`) || PathPrefix(`/api/v3/api-docs`) || Path(`/api/swagger-ui.html`))"
      - "traefik.http.routers.oun-api-swagger.middlewares=cors"
      - "traefik.http.routers.oun-api-swagger.tls=true"
      - "traefik.http.routers.oun-api-swagger.tls.certresolver=myresolver"
      - "traefik.http.routers.oun-api-swagger.entrypoints=websecure"
      
      # 테스트 엔드포인트 (인증 불필요)
      - "traefik.http.routers.oun-api-test.rule=Host(`${DOMAIN_MAIN}`) && Path(`/api/test`)"
      - "traefik.http.routers.oun-api-test.middlewares=cors"
      - "traefik.http.routers.oun-api-test.tls=true"
      - "traefik.http.routers.oun-api-test.tls.certresolver=myresolver"
      - "traefik.http.routers.oun-api-test.entrypoints=websecure"
      
      # actuator 라우터 (인증 불필요)
      - "traefik.http.routers.oun-api-actuator.rule=Host(`${DOMAIN_MAIN}`) && PathPrefix(`/api/actuator`)"
      - "traefik.http.routers.oun-api-actuator.middlewares=cors"
      - "traefik.http.routers.oun-api-actuator.tls=true"
      - "traefik.http.routers.oun-api-actuator.tls.certresolver=myresolver"
      - "traefik.http.routers.oun-api-actuator.entrypoints=websecure"

      # 공통 서비스 설정
      - "traefik.http.services.oun-api.loadbalancer.server.port=8080"
    networks:
      - simol-network


# simol-user와 redis 네트워크 동일하게 처리
networks:
  simol-network:
    name: simol-network
    driver: bridge
